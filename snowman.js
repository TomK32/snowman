// Generated by CoffeeScript 1.4.0
var Snowman;

Snowman = (function() {

  Snowman.prototype.dt = 1000 / 60;

  Snowman.prototype.last_time = Date.now();

  Snowman.prototype.balls = [];

  Snowman.prototype.eyes = [];

  Snowman.prototype.instructions = false;

  Snowman.prototype.carrot = false;

  Snowman.prototype.cursor = false;

  Snowman.prototype.animals = [];

  function Snowman() {
    _.bindAll(this);
    this.$canvas = $("#canvas");
    this.canvas = this.$canvas[0];
    this.canvas.width = window.innerWidth;
    this.canvas.height = window.innerHeight;
    this.context = this.canvas.getContext("2d");
    this.$canvas.bind('mousedown', this.startBall);
    this.$canvas.bind('touchdown', this.startBall);
    this.$canvas.bind('mousemove', this.setCursor);
    this.$canvas.bind('touchmove', this.setCursor);
    this.snowfall = new Snowfall(this.context);
    _.throttle(this.draw, this.dt);
    _.throttle(this.update, this.dt);
    this.instructions = 'Klicke/Tippe und fahr herum um drei Kugeln zu machen';
    this.images = {
      coal: this.loadImage('coal.png'),
      carrot: this.loadImage('carrot.png'),
      background: this.loadImage('background.png'),
      animals: {
        hoppel: this.loadImage('hoppel.png'),
        hoppel2: this.loadImage('hoppel2.png')
      }
    };
    this.animals = [];
    this.placeAnimals(4);
    this.update();
    this.draw();
    this.cursor = {
      x: 0,
      y: 0,
      image: this.images.carrot
    };
    this;

  }

  Snowman.prototype.loadImage = function(filename) {
    var image;
    image = new Image();
    image.src = filename + '?' + Date.now();
    return image;
  };

  Snowman.prototype.placeAnimals = function(num) {
    var i, _i, _results,
      _this = this;
    _results = [];
    for (i = _i = 0; 0 <= num ? _i <= num : _i >= num; i = 0 <= num ? ++_i : --_i) {
      _results.push((function(i) {
        return _this.animals.push({
          x: Math.floor(Math.random() * _this.canvas.width) * 0.8 + _this.canvas.width * 0.1,
          y: Math.floor(Math.random() * _this.canvas.height * 0.1) + _this.canvas.height * 0.6,
          image: _.values(_this.images.animals)[i % _.values(_this.images.animals).length]
        });
      })(i));
    }
    return _results;
  };

  Snowman.prototype.draw = function() {
    var animal, ball, eye, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
    this.drawGarden();
    this.snowfall.draw();
    _ref = this.animals;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      animal = _ref[_i];
      this.drawImage(animal);
    }
    _ref1 = this.balls;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      ball = _ref1[_j];
      ball.draw();
    }
    _ref2 = this.eyes;
    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
      eye = _ref2[_k];
      this.drawEye(eye);
    }
    this.drawText(this.instructions, 10, 40);
    if (this.carrot) {
      this.drawCarrot();
    }
    if (this.cursor) {
      this.context.drawImage(this.cursor.image, this.cursor.x, this.cursor.y);
    }
    this.drawText('Alex der Schneemann', 10, 20, '#000000', '20px sans-serif');
    return window.setTimeout(this.draw, this.dt);
  };

  Snowman.prototype.update = function() {
    var dt, new_time;
    new_time = Date.now();
    dt = (new_time - this.last_time) / 1024;
    this.last_time = new_time;
    window.setTimeout(this.update, this.dt);
    this.snowfall.update(dt);
    if (this.ball) {
      return this.ball.update(dt);
    }
  };

  Snowman.prototype.startBall = function(event) {
    if (this.balls.length >= 3) {
      return;
    }
    this.ball = new Ball(this.balls.length, this);
    this.balls.push(this.ball);
    this.$canvas.bind('mouseup', this.endBall);
    return this.$canvas.bind('touchup', this.endBall);
  };

  Snowman.prototype.endBall = function(event) {
    this.$canvas.unbind('mouseup', this.endBall);
    this.$canvas.unbind('touchup', this.endBall);
    this.ball.stop();
    this.ball = null;
    this.instructions = 'Und noch eine Kugel';
    if (this.balls.length >= 3) {
      this.$canvas.unbind('mousedown', this.startBall);
      this.$canvas.unbind('touchdown', this.startBall);
      return this.startEyes();
    }
  };

  Snowman.prototype.drawText = function(text, x, y, color, font) {
    this.context.fillStyle = color || '#000000';
    this.context.font = font || '14px serif';
    this.context.fillText(text, x || 10, y || 20);
    return this.drawText;
  };

  Snowman.prototype.drawGarden = function() {
    this.context.fillStyle = '#DDDDDD';
    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);
    return this.context.drawImage(this.images.background, 0, 0, this.canvas.width, this.canvas.height);
  };

  Snowman.prototype.startEyes = function() {
    this.cursor = {
      image: this.images.coal
    };
    this.instructions = 'Und jetzt setzt die Augen';
    this.$canvas.bind('mousedown', this.setEye);
    return this.$canvas.bind('touchdown', this.setEye);
  };

  Snowman.prototype.setEye = function(event) {
    var last;
    last = _.last(this.balls);
    if (this.inCircle(event.offsetX, event.offsetY, last.x, last.y, last.radius)) {
      if (!this.eyes[0] || !this.inCircle(event.offsetX - this.images.coal.width, event.offsetY - this.images.coal.height, this.eyes[0].x, this.eyes[0].y, this.eyes[0].radius)) {
        this.eyes.push({
          x: event.offsetX - this.images.coal.width,
          y: event.offsetY - this.images.coal.height
        });
      }
    }
    if (this.eyes.length === 2) {
      this.$canvas.unbind('mousedown', this.setEye);
      this.$canvas.unbind('touchdown', this.setEye);
      return this.startCarrot();
    }
  };

  Snowman.prototype.startCarrot = function() {
    this.$canvas.bind('mousedown', this.setCarrot);
    this.$canvas.bind('touchdown', this.setCarrot);
    this.cursor.image = this.images.carrot;
    return this.instructions = 'Und jetzt noch eine Karotte';
  };

  Snowman.prototype.setCarrot = function(event) {
    var last;
    last = _.last(this.balls);
    if (this.inCircle(event.offsetX - this.images.carrot.width, event.offsetY - this.images.carrot.height, last.x, last.y, last.radius)) {
      this.carrot = {
        x: event.offsetX - this.images.carrot.width,
        y: event.offsetY - this.images.carrot.height
      };
      this.$canvas.unbind('mousedown', this.setCarrot);
      this.$canvas.unbind('touchdown', this.setCarrot);
      this.cursor = null;
      return this.instructions = 'Fertig :)';
    }
  };

  Snowman.prototype.drawCarrot = function() {
    return this.context.drawImage(this.images.carrot, this.carrot.x, this.carrot.y);
  };

  Snowman.prototype.setCursor = function(event) {
    if (!this.cursor) {
      return;
    }
    this.cursor.x = event.offsetX - this.cursor.image.width;
    return this.cursor.y = event.offsetY - this.cursor.image.height;
  };

  Snowman.prototype.inCircle = function(x1, y1, x2, y2, radius) {
    var sq;
    sq = function(x) {
      return x * x;
    };
    return sq(x1 - x2) + sq(y1 - y2) < sq(radius);
  };

  Snowman.prototype.drawEye = function(eye) {
    return this.context.drawImage(this.images.coal, eye.x, eye.y);
  };

  Snowman.prototype.drawImage = function(el) {
    return this.context.drawImage(el.image, el.x, el.y);
  };

  return Snowman;

})();
