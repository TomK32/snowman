// Generated by CoffeeScript 1.4.0
var Snowfall;

Snowfall = (function() {

  Snowfall.prototype.angle = 0;

  Snowfall.prototype.particles = [];

  Snowfall.prototype.height = 0;

  Snowfall.prototype.width = 0;

  Snowfall.prototype.max_particles = 25;

  function Snowfall(ctx) {
    var canvas, i, _i, _ref;
    this.ctx = ctx;
    _.bindAll(this);
    if (!this.ctx) {
      canvas = document.getElementById("canvas");
      this.height = window.innerWidth;
      this.height = window.innerHeight;
      canvas.width = this.width;
      canvas.height = this.height;
      this.ctx = canvas.getContext("2d");
    } else {
      this.width = this.ctx.canvas.width;
      this.height = this.ctx.canvas.height;
    }
    for (i = _i = 0, _ref = this.max_particles; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      this.addParticle();
    }
  }

  Snowfall.prototype.addParticle = function() {
    return this.particles.push({
      x: Math.random() * this.width,
      y: Math.random() * this.height,
      r: Math.random() * 4 + 1,
      d: Math.random() * this.max_particles
    });
  };

  Snowfall.prototype.draw = function() {
    var i, p, _i, _ref;
    this.ctx.fillStyle = "rgba(255, 255, 255, 0.8)";
    this.ctx.beginPath();
    for (i = _i = 0, _ref = this.max_particles; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      p = this.particles[i];
      this.ctx.moveTo(p.x, p.y);
      this.ctx.arc(p.x, p.y, p.r, 0, Math.PI * 2, true);
    }
    return this.ctx.fill();
  };

  Snowfall.prototype.update = function(dt) {
    var i, p, s, _i, _ref, _results;
    s = dt * 300;
    _results = [];
    for (i = _i = 0, _ref = this.max_particles; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      p = this.particles[i];
      p.y += Math.cos(this.angle + p.d) + p.r / 2;
      p.x += Math.sin(this.angle) + dt * 10 * p.r;
      if (p.x > this.widthW + 5 || p.x < -5 || p.y > this.height) {
        if (i % 3 > 0) {
          _results.push(this.particles[i] = {
            x: Math.random() * this.width,
            y: -10,
            r: p.r,
            d: p.d
          });
        } else {
          if (Math.sin(this.angle) > 0) {
            _results.push(this.particles[i] = {
              x: -5,
              y: Math.random() * this.heightH,
              r: p.r,
              d: p.d
            });
          } else {
            _results.push(this.particles[i] = {
              x: this.widthW + 5,
              y: Math.random() * this.heightH,
              r: p.r,
              d: p.d
            });
          }
        }
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  return Snowfall;

})();
